
**----------------------------------------------------------------------
* Programmer: Akarsh Kain
* Class Account: cssc1344
* Assignment or Title: Assigment 3
* Filename: prog3.s
* Date completed: 12/05/17 
*----------------------------------------------------------------------
* Problem statement: Enter an item number and program will print the user entered number and the price of the item using the provided string.
* Input: Number
* Output: User entered number and the price of the item
* Error conditions tested: input natural numbers
* Included files: N/A 
* Method and/or pseudocode: User will input an integer then the program will *convert that input and compare it with the array stored in the file. That array *is containing the costs. Finally, the porgram will output the user entered *number and the cost.
* References: TA Mark and Prof Scott
*----------------------------------

*------------------------------------
*
        ORG     $0
        DC.L    $3000           * Stack pointer value after a reset
        DC.L    start           * Program counter value after a reset
        ORG     $3000           * Start at location 3000 Hex
*
*----------------------------------------------------------------------
*
#minclude /home/cs/faculty/cs237/bsvc/macros/iomacs.s
#minclude /home/cs/faculty/cs237/bsvc/macros/evtmacs.s
*
*----------------------------------------------------------------------
*
*	
*----------------------------------------------------------------------
*
	start:  
	initIO                  * Initialize (required for I/O)
	setEVT			* Error handling routines
*	initF			* For floating point macros only		

	clr.l   D0
        clr.l   D1
        clr.l   D2
        clr.l   D3

cost:  	EQU     $7000


        lineout title
        lineout prompt
        linein  input
        move.l  D0,D4           * value in D0 is copied to D4 (length)
        cvta2   input,D0

        cvt2a   value,#5         
        stripp  value,#5



        cvta2   input,D0
        move.l  D0,D1           * Input value
        sub.l   #1,D1           * Arithmetic to get size to byte
        mulu    #2,D1
        lea     cost,A0
        adda.l  D1,A0

        move.w  (A0),D3         *D3 has item cost

        lea     value,A1
        adda    D4,A1

        clr.l   D0		*clearing D0 value
        lea     line2,A2

        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+
        move.b  (A2)+,(A1)+


        move.l  D3,D0
        cvt2a   (A1),#5
        stripp  (A1),#5
        adda.l  D0,A1

loop:   cmpi.b  #0,D6
        beq     loop2
        move.b  (A2)+,(A1)

        sub.l   #1,D6
        bra     loop


loop2:  move.b  #'.',(A1)+		*loop to store ".00"
        move.b  #'0',(A1)+
        move.b  #'0',(A1)+
        move.b  #0,(A1)+

exit:   lineout line
        break

*
*----------------------------------------------------------------------
*       Storage declarations
                                *My Storage declaration goes here

title:	dc.b 	'Program #3, Akarsh Kain, cssc1344',0
prompt: dc.b    'Enter an item number:',0
input:  ds.b    80
line:   dc.b    'Item '
value:	ds.b    80
line2:	dc.b    ' costs $'
value2:	ds.b    10
        end
	break